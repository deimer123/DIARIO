<?php

namespace App\Filament\Widgets;

use Filament\Widgets\ChartWidget;
use App\Models\Pago;
use App\Models\Prestamo;
use Carbon\Carbon;

class TotalesDiariosChart extends ChartWidget
{
    protected static ?string $heading = 'ðŸ“Š Total Diario en el Mes';
    protected static string $color = 'primary';

    // âœ… Cambia a grÃ¡fico de barras para mejor visualizaciÃ³n
    protected function getType(): string
    {
        return 'bar';
    }

    protected function getData(): array
    {
        $mes = request()->query('mes', Carbon::now()->month);
        $aÃ±o = request()->query('aÃ±o', Carbon::now()->year);
        $diasEnMes = Carbon::create($aÃ±o, $mes)->daysInMonth;

        // ðŸ“Œ Crear un array con todos los dÃ­as del mes inicializados en 0
        $totalesCobrado = array_fill(1, $diasEnMes, 0);
        $totalesPrestado = array_fill(1, $diasEnMes, 0);

        // ðŸ“Œ Obtener los pagos del mes
        $pagos = Pago::whereYear('fecha_pago', $aÃ±o)
            ->whereMonth('fecha_pago', $mes)
            ->selectRaw('DAY(fecha_pago) as dia, SUM(monto) as total')
            ->groupBy('dia')
            ->pluck('total', 'dia')
            ->toArray();

        // ðŸ“Œ Obtener los prÃ©stamos del mes
        $prestamos = Prestamo::whereYear('fecha_prestamo', $aÃ±o)
            ->whereMonth('fecha_prestamo', $mes)
            ->selectRaw('DAY(fecha_prestamo) as dia, SUM(monto) as total')
            ->groupBy('dia')
            ->pluck('total', 'dia')
            ->toArray();

        // ðŸ“Œ Llenar los datos en los arreglos
        foreach ($pagos as $dia => $total) {
            $totalesCobrado[$dia] = $total;
        }

        foreach ($prestamos as $dia => $total) {
            $totalesPrestado[$dia] = $total;
        }

        return [
            'labels' => array_map(fn ($dia) => (string) $dia, range(1, $diasEnMes)), // ðŸ“… Mostrar todos los dÃ­as
            'datasets' => [
                [
                    'label' => 'ðŸ’° Total Cobrado',
                    'data' => array_values($totalesCobrado),
                    'backgroundColor' => 'rgba(8, 149, 244, 0.8)',
                    'borderColor' => 'rgba(8, 149, 244, 1)',
                    'borderWidth' => 1,
                ],
                [
                    'label' => 'ðŸ’µ Total Prestado',
                    'data' => array_values($totalesPrestado),
                    'backgroundColor' => 'rgba(255, 99, 132, 0.8)',
                    'borderColor' => 'rgba(255, 99, 132, 1)',
                    'borderWidth' => 1,
                ],
            ],
        ];
    }
}
